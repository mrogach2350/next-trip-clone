{"version":3,"sources":["utils/styleConstants.js","components/routesList.js","components/directionButtons.js","components/stopsList.js","components/infoDialog.js","utils/apiCalls.js","containers/rootContainer.js","App.js","serviceWorker.js","index.js"],"names":["header","backgroundColor","color","margin","padding","styles","root","textAlign","withStyles","_ref","_ref$classes","classes","_ref$routes","routes","_ref$currentRoute","currentRoute","_ref$onSelectRoute","onSelectRoute","_ref$history","history","currentRouteData","find","x","Route","react_default","a","createElement","index_es","className","onClick","push","style","maxHeight","overflow","map","route","idx","button","selected","key","Description","display","flexDirection","alignItems","justifyContent","paper","_ref$directions","directions","_ref$currentDirection","currentDirection","_ref$onSelectDirectio","onSelectDirection","direction","variant","Value","Text","_ref$stops","stops","_ref$onStopClicked","onStopClicked","stop","value","listing","marginBottom","content","_ref$currentStopText","currentStopText","_ref$open","open","_ref$departures","departures","handleClose","_ref$currentRouteData","currentDirectionData","fullWidth","onClose","length","departure","DepartureText","fetchDepartures","routeNumber","arguments","undefined","stopId","axios","get","concat","RootContainer","_React$PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_ref$Value","_ref$Text","_this$state","then","result","setState","data","showModal","closeModal","defaultProvider","providers","currentProvider","inherits","createClass","_this2","results","filteredRoutes","filter","ProviderID","prevProps","prevState","_this3","prevParams","queryString","parse","location","search","params","r","fetchDirections","d","fetchStops","_this$props","_this$props$history","_this$props$classes","_this$state2","container","item","xs","md","md-offset","routesList","directionButtons","stopsList","infoDialog","React","PureComponent","height","App","react_router_dom","react_router","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a23d45d2.chunk.js","sourcesContent":["export const header = {\n  backgroundColor: '#3f51b5', \n  color: 'white', \n  margin: 0, \n  padding: '20px',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, List, ListItem } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  root: { \n    margin: '20px', \n    textAlign: 'center', \n  }\n}\n\nexport const RoutesList = ({ \n  classes = {},\n  routes = [], \n  currentRoute = '', \n  onSelectRoute = () => {},\n  history = {},\n}) => {\n  const currentRouteData = routes.find(x => x.Route === currentRoute)\n  return (\n    <Paper className={classes.root}>\n      <h1 onClick={() => history.push('/')} className={classes.header}>Routes</h1>\n      {currentRoute === '' ?\n        <List style={{ maxHeight: '500px', overflow: 'scroll' }}>\n          {routes.map((route, idx) => \n            <ListItem \n              button\n              onClick={() => onSelectRoute(route.Route)}\n              selected={currentRoute === route.Route}\n              key={idx}\n            >\n              {route.Description}\n            </ListItem>\n          )}\n        </List>:\n        <h4 style={{ padding: '15px', margin: 0 }}>\n          {currentRouteData.Description}\n        </h4>\n      }\n    </Paper> \n  )\n} \n\nRoutesList.propTypes = {\n  classes: PropTypes.object,\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      Route: PropTypes.string,\n      Description: PropTypes.string,\n    })\n  ),\n  currentRoute: PropTypes.string,\n  onSelectRoute: PropTypes.func,\n  history: PropTypes.object,\n}\n\nexport default withStyles(styles)(RoutesList)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, Button } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  root: { \n    margin: 0,\n    padding: '16px', \n    display: 'flex', \n    flexDirection: 'column', \n    alignItems: 'center',\n    justifyContent: 'center' \n  },\n  button: {\n    margin: '10px',\n  },\n  header,\n  paper: { \n    margin: '20px', \n    textAlign: 'center', \n  }\n}\n\nexport const DirectionButtons = ({ \n    classes = {},\n    directions = [], \n    currentDirection = '', \n    onSelectDirection = () => {} \n  }) => \n    <Paper className={classes.paper}>\n      <h1 className={classes.header}>Direction</h1>\n      <div className={classes.root}>\n        {directions.map((direction, idx) => \n          <Button \n            key={idx}\n            className={classes.button}\n            variant=\"contained\" \n            color={currentDirection === direction.Value ? \"primary\" : \"default\"}\n            onClick={() => onSelectDirection(direction.Value)}\n          >\n            {direction.Text}\n          </Button>\n        )}\n      </div>\n    </Paper>\n\nDirectionButtons.propTypes = {\n  classes: PropTypes.object,\n  directions: PropTypes.arrayOf(\n    PropTypes.shape({\n      Value: PropTypes.string,\n      Text: PropTypes.string,\n    })\n  ),\n  currentDirection: PropTypes.string,\n  onSelectDirection: PropTypes.func,\n}\n\nexport default withStyles(styles)(DirectionButtons)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, List, ListItem } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n}\n\nexport const StopsList = ({ stops = [], classes = {}, onStopClicked = () => {} }) => {\n  return (\n    <Paper style={{ margin: '20px', textAlign: 'center' }}>\n      <h1 className={classes.header}>Stops</h1>\n      <List style={{ maxHeight: '500px', overflow: 'scroll' }}>\n        {stops.map((stop, idx) => \n          <ListItem \n            button\n            onClick={() => onStopClicked(stop)}\n            value={stop.Value} \n            key={idx}\n          >\n            {stop.Text}\n          </ListItem>\n        )}\n      </List>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(StopsList)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Dialog, DialogContent } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  listing: {\n    marginBottom: '10px'\n  },\n  content: {\n    textAlign: 'center',\n    padding: '10px',\n  }\n}\n\nexport const InfoDialog = ({ \n  currentStopText = '', \n  open = false, \n  departures = [],\n  handleClose, \n  classes = {},\n  currentRouteData = {},\n  currentDirectionData = {}, \n}) => {\n  return(\n    <Dialog open={open} fullWidth onClose={handleClose} >\n      <div className={classes.header}>\n        <strong>Route:</strong> {currentRouteData.Description}<br/>\n        <strong>Stop:</strong> {currentStopText}<br/>\n        <strong>Direction:</strong> {currentDirectionData.Text} \n      </div>\n      <DialogContent className={classes.content}>\n        {departures.length === 0 ? \n          <h4>No Departures left today</h4>:\n          departures.map(departure => \n            <div className={classes.listing}>\n              <span>{departure.Description}</span><br/>\n              <span>Departs At: {departure.DepartureText}</span>\n            </div>\n          )\n        }\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default withStyles(styles)(InfoDialog)","import axios from 'axios'\n\nexport const fetchProviders = () => axios.get('http://svc.metrotransit.org/NexTrip/Providers?format=json')\n\nexport const fetchRoutes = () => axios.get('http://svc.metrotransit.org/NexTrip/Routes?format=json')\n\nexport const fetchDirections = (routeNumber = 0) => \n  axios.get(`http://svc.metrotransit.org/NexTrip/Directions/${routeNumber}?format=json`)\n\nexport const fetchStops = (routeNumber = 0, direction = 0) => \n  axios.get(`http://svc.metrotransit.org/NexTrip/Stops/${routeNumber}/${direction}?format=json`)\n\nexport const fetchDepartures = (routeNumber = 0, direction = 0, stopId = '') => \n  axios.get(`http://svc.metrotransit.org/NexTrip/${routeNumber}/${direction}/${stopId}`)\n\n","import React from 'react'\nimport queryString from 'query-string'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Grid } from '@material-ui/core'\nimport RoutesList from '../components/routesList'\nimport DirectionButtons from '../components/directionButtons'\nimport StopsList from '../components/stopsList'\nimport InfoDialog from '../components/infoDialog'\nimport { fetchProviders, fetchRoutes, fetchDirections, fetchStops, fetchDepartures } from '../utils/apiCalls'\n\nconst styles = {\n  root: {\n    backgroundColor: '#d3d3d3',\n    height: '100vh'\n  }\n}\n\nexport class RootContainer extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      defaultProvider: '8',\n      providers: [],\n      routes: [],\n      directions: [],\n      stops: [],\n      currentProvider: '8',\n      currentRoute: '',\n      currentDirection: '',\n      currentStopText: '',\n    }\n  }\n\n  componentDidMount() {\n    const { currentProvider } = this.state\n    fetchProviders().then(results => this.setState({ providers: results.data }))\n    fetchRoutes().then(results => {\n      const filteredRoutes = results.data.filter(x => x.ProviderID === currentProvider)\n      this.setState({ routes: filteredRoutes })\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = queryString.parse(prevProps.location.search)\n    const params = queryString.parse(this.props.location.search)\n\n    if (params.r !== prevParams.r) {\n      if(!params.r) {\n        return this.setState({ \n          currentRoute: '', \n          currentDirection: '',\n          directions: [], \n          stops: [],\n          departures: [],\n          showModal: false,\n        })\n      }\n\n      return fetchDirections(params.r).then(result => {\n        const directions = result.data\n        this.setState({ currentRoute: params.r, directions })\n      }) \n    }\n\n    if (params.d !== prevParams.d) {\n      if(!params.d) {\n        return this.setState({ currentDirection: '', stops: [] })\n      }\n\n      return fetchStops(params.r, params.d).then(result => {\n        const stops = result.data\n        this.setState({ currentDirection: params.d, stops })\n      })\n    }\n  }\n\n  onSelectRoute = (currentRoute) => {\n    const { history } = this.props\n    history.push(`?r=${currentRoute}`)\n  }\n\n  onSelectDirection = (currentDirection) => {\n    const { history } = this.props\n    const { currentRoute } = this.state\n    history.push(`?r=${currentRoute}&d=${currentDirection}`)\n  }\n\n  onStopClicked = ({ Value = '', Text = '' }) => {\n    const { currentRoute, currentDirection } = this.state\n    fetchDepartures(currentRoute, currentDirection, Value).then(result => {\n      this.setState({ departures: result.data, currentStopText: Text, showModal: true })\n    })\n  }\n\n  closeModal = () => this.setState({ showModal: false })\n\n  render() {\n    const { \n      history = {}, \n      classes = {} \n    } = this.props\n    const { \n      routes, \n      currentRoute, \n      directions, \n      currentDirection, \n      stops, \n      currentStopText, \n      showModal, \n      departures \n    } = this.state\n    const currentRouteData = routes.find(x => x.Route === currentRoute)\n    const currentDirectionData = directions.find(x => x.Value === currentDirection)\n    return (\n      <Grid container className={classes.root}>\n        <Grid item xs={false} md={1} />\n        <Grid item xs={12} md={5} md-offset={1}>\n          {routes.length > 0 &&\n            <RoutesList \n              history={history}\n              routes={routes}\n              currentRoute={currentRoute}\n              onSelectRoute={this.onSelectRoute}\n            /> \n          }\n          {directions.length > 0 &&\n            <DirectionButtons \n              directions={directions}\n              currentDirection={currentDirection}\n              onSelectDirection={this.onSelectDirection}\n            />\n          }\n        </Grid> \n        <Grid item xs={12} md={5}>\n          {stops.length > 0 &&\n            <StopsList stops={stops} onStopClicked={this.onStopClicked} />\n          }\n        </Grid>\n        <InfoDialog \n          open={showModal} \n          currentStopText={currentStopText} \n          departures={departures}\n          handleClose={this.closeModal} \n          currentRouteData={currentRouteData}\n          currentDirectionData={currentDirectionData}\n        />\n      </Grid>\n    )\n  }\n}\n\nexport default withStyles(styles)(RootContainer)","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport RootContainer from './containers/rootContainer'\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" component={RootContainer} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}