{"version":3,"sources":["utils/styleConstants.js","components/routesList.js","components/directionButtons.js","components/stopsList.js","components/infoDialog.js","components/providerList.js","utils/selectors.js","utils/apiCalls.js","containers/rootContainer.js","App.js","serviceWorker.js","index.js"],"names":["header","backgroundColor","color","margin","padding","styles","Object","objectSpread","display","justifyContent","alignItems","root","textAlign","list","maxHeight","overflow","h1","withStyles","_ref","_ref$classes","classes","_ref$routes","routes","_ref$currentRoute","currentRoute","_ref$onSelectRoute","onSelectRoute","_ref$history","history","currentRouteData","find","x","Route","react_default","a","createElement","index_es","className","onClick","push","variant","map","route","idx","button","selected","key","Description","style","flexDirection","paper","_ref$directions","directions","_ref$currentDirection","currentDirection","_ref$onSelectDirectio","onSelectDirection","direction","Value","Text","_ref$stops","stops","_ref$onStopClicked","onStopClicked","stop","value","listing","marginBottom","content","_ref$currentStopText","currentStopText","_ref$open","open","_ref$departures","departures","handleClose","_ref$currentRouteData","currentDirectionData","fullWidth","onClose","length","departure","Actual","DepartureText","ProviderList","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","anchorEl","handleClick","event","setState","currentTarget","handleSelectAndClose","currentProvider","_this$props$onSelectP","props","onSelectProvider","inherits","createClass","_this2","_this$props","_this$props$providers","providers","_this$props$currentPr","_this$props$classes","currentProviderData","aria-owns","undefined","aria-haspopup","id","Boolean","provider","React","PureComponent","getParsedSearchString","queryString","parse","_","location","search","getSearchString","fetchDepartures","routeNumber","stopId","axios","get","initialState","showModal","RootContainer","_ref$Value","_ref$Text","_this$state","then","result","data","closeModal","results","prevProps","prevState","_this3","prevParams","params","r","fetchDirections","d","fetchStops","_this$props$history","_this$state2","filteredRoutes","filter","ProviderID","container","item","xs","md","md-offset","providerList","routesList","directionButtons","stopsList","infoDialog","App","react_router_dom","react_router","path","component","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3d27d45c.chunk.js","sourcesContent":["export const flexHeader = {\n  backgroundColor: '#3f51b5', \n  color: 'white', \n  margin: 0, \n  padding: '20px',\n  display: 'flex',\n  justifyContent: 'space-around',\n  alignItems: 'center',\n}\n\nexport const header = {\n  backgroundColor: '#3f51b5', \n  color: 'white', \n  margin: 0, \n  padding: '20px',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, List, ListItem, Button } from '@material-ui/core'\nimport { flexHeader } from '../utils/styleConstants'\n\nconst styles = {\n  header: {\n    ...flexHeader,\n  },\n  root: { \n    margin: '20px', \n    textAlign: 'center', \n  },\n  list: { \n    maxHeight: '500px', \n    overflow: 'scroll' \n  },\n  h1: {\n    margin: 0,\n  }\n}\n\nexport const RoutesList = ({ \n  classes = {},\n  routes = [], \n  currentRoute = '', \n  onSelectRoute = () => {},\n  history = {},\n}) => {\n  const currentRouteData = routes.find(x => x.Route === currentRoute)\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <h1 className={classes.h1}>Routes</h1>\n        <Button onClick={() => history.push('/')} variant=\"contained\" >Reset</Button>\n      </div>\n      {currentRoute === '' ?\n        <List className={classes.list}>\n          {routes.map((route, idx) => \n            <ListItem \n              button\n              onClick={() => onSelectRoute(route.Route)}\n              selected={currentRoute === route.Route}\n              key={idx}\n            >\n              {route.Description}\n            </ListItem>\n          )}\n        </List>:\n        <h4 style={{ padding: '15px', margin: 0 }}>\n          {currentRouteData.Description}\n        </h4>\n      }\n    </Paper> \n  )\n} \n\nRoutesList.propTypes = {\n  classes: PropTypes.object,\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      Route: PropTypes.string,\n      Description: PropTypes.string,\n    })\n  ),\n  currentRoute: PropTypes.string,\n  onSelectRoute: PropTypes.func,\n  history: PropTypes.object,\n}\n\nexport default withStyles(styles)(RoutesList)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, Button } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  root: { \n    margin: 0,\n    padding: '16px', \n    display: 'flex', \n    flexDirection: 'column', \n    alignItems: 'center',\n    justifyContent: 'center' \n  },\n  button: {\n    margin: '10px',\n  },\n  paper: { \n    margin: '20px', \n    textAlign: 'center', \n  },\n  h1: {\n    margin: 0,\n  }\n}\n\nexport const DirectionButtons = ({ \n    classes = {},\n    directions = [], \n    currentDirection = '', \n    onSelectDirection = () => {},\n    history = () => {},\n    currentRoute = '', \n  }) => \n    <Paper className={classes.paper}>\n      <div className={classes.header}>\n        <h1 className={classes.h1}>Direction</h1>\n      </div>\n      <div className={classes.root}>\n        {directions.map((direction, idx) => \n          <Button \n            key={idx}\n            className={classes.button}\n            variant=\"contained\" \n            color={currentDirection === direction.Value ? \"primary\" : \"default\"}\n            onClick={() => onSelectDirection(direction.Value)}\n          >\n            {direction.Text}\n          </Button>\n        )}\n      </div>\n    </Paper>\n\nDirectionButtons.propTypes = {\n  classes: PropTypes.object,\n  directions: PropTypes.arrayOf(\n    PropTypes.shape({\n      Value: PropTypes.string,\n      Text: PropTypes.string,\n    })\n  ),\n  currentDirection: PropTypes.string,\n  onSelectDirection: PropTypes.func,\n}\n\nexport default withStyles(styles)(DirectionButtons)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, List, ListItem } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n}\n\nexport const StopsList = ({ \n  stops = [], \n  classes = {}, \n  onStopClicked = () => {} \n}) => \n  <Paper style={{ margin: '20px', textAlign: 'center' }}>\n    <h1 className={classes.header}>Stops</h1>\n    <List style={{ maxHeight: '500px', overflow: 'scroll' }}>\n      {stops.map((stop, idx) => \n        <ListItem \n          button\n          onClick={() => onStopClicked(stop)}\n          value={stop.Value} \n          key={idx}\n        >\n          {stop.Text}\n        </ListItem>\n      )}\n    </List>\n  </Paper>\n\nexport default withStyles(styles)(StopsList)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Dialog, DialogContent } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  listing: {\n    marginBottom: '10px'\n  },\n  content: {\n    textAlign: 'center',\n    padding: '10px',\n  }\n}\n\nexport const InfoDialog = ({ \n  currentStopText = '', \n  open = false, \n  departures = [],\n  handleClose, \n  classes = {},\n  currentRouteData = {},\n  currentDirectionData = {}, \n}) => \n  <Dialog open={open} fullWidth onClose={handleClose} >\n    <div className={classes.header}>\n      <strong>Route:</strong> {currentRouteData.Description}<br/>\n      <strong>Stop:</strong> {currentStopText}<br/>\n      <strong>Direction:</strong> {currentDirectionData.Text} \n    </div>\n    <DialogContent className={classes.content}>\n      {departures.length === 0 ? \n        <h4>No Departures left today</h4>:\n        departures.map(departure => \n          <div className={classes.listing}>\n            <span>{departure.Description}</span><br/>\n            {departure.Actual ?\n              <span>LIVE: Departs in {departure.DepartureText}</span> :\n              <span>Departs At: {departure.DepartureText}</span>\n            }\n          </div>\n        )\n      }\n    </DialogContent>\n  </Dialog>\n\nexport default withStyles(styles)(InfoDialog)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, Button, Menu, MenuItem } from '@material-ui/core'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '20px',\n  },\n  button: {\n    margin: '20px',\n  }\n}\n\nexport class ProviderList extends React.PureComponent {\n  state = {\n    anchorEl: null,\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  handleSelectAndClose = (currentProvider) => {\n    const { onSelectProvider = () => {} } = this.props\n    onSelectProvider(currentProvider)\n    this.setState({ anchorEl: null })\n  }\n\n  render() {\n    const { providers = [], currentProvider = '', classes = {} } = this.props\n    const { anchorEl } = this.state\n    const currentProviderData = providers.find(x =>  x.Value ===  currentProvider) || {}\n    return (\n      <Paper className={classes.root}>\n        <h4>Filter By Provider: </h4>\n        <Button\n          aria-owns={anchorEl ? 'simple-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          className={classes.button}\n        >\n          {currentProviderData.Text || \"All Providers\" }\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          <MenuItem \n              onClick={() => this.handleSelectAndClose('')}\n            >\n              All Providers\n            </MenuItem>\n          {providers.map(provider => \n            <MenuItem \n              onClick={() => this.handleSelectAndClose(provider.Value)}\n            >\n              {provider.Text}\n            </MenuItem>\n          )}\n        </Menu>\n      </Paper>\n    )\n  }\n}\n\nexport default withStyles(styles)(ProviderList)","import idx from 'idx'\nimport queryString from 'query-string'\n\nexport const getSearchString = (props = {}) => idx(props, _ => _.location.search)\n\nexport const getParsedSearchString = (props = {}) =>\n  queryString.parse(getSearchString(props))","import axios from 'axios'\n\nexport const fetchProviders = () => axios.get('http://svc.metrotransit.org/NexTrip/Providers?format=json')\n\nexport const fetchRoutes = () => axios.get('http://svc.metrotransit.org/NexTrip/Routes?format=json')\n\nexport const fetchDirections = (routeNumber = 0) => \n  axios.get(`http://svc.metrotransit.org/NexTrip/Directions/${routeNumber}?format=json`)\n\nexport const fetchStops = (routeNumber = 0, direction = 0) => \n  axios.get(`http://svc.metrotransit.org/NexTrip/Stops/${routeNumber}/${direction}?format=json`)\n\nexport const fetchDepartures = (routeNumber = 0, direction = 0, stopId = '') => \n  axios.get(`http://svc.metrotransit.org/NexTrip/${routeNumber}/${direction}/${stopId}`)\n\n","import React from 'react'\nimport { Grid } from '@material-ui/core'\nimport RoutesList from '../components/routesList'\nimport DirectionButtons from '../components/directionButtons'\nimport StopsList from '../components/stopsList'\nimport InfoDialog from '../components/infoDialog'\nimport ProviderList from '../components/providerList'\nimport { getParsedSearchString } from '../utils/selectors'\nimport { fetchProviders, fetchRoutes, fetchDirections, fetchStops, fetchDepartures } from '../utils/apiCalls'\n\nconst initialState = {\n  providers: [],\n  routes: [],\n  directions: [],\n  stops: [],\n  departures: [],\n  currentProvider: '',\n  currentRoute: '',\n  currentDirection: '',\n  currentStopText: '',\n  showModal: false,\n}\n\nexport class RootContainer extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = initialState\n  }\n\n  componentDidMount() {\n    fetchProviders().then(results => this.setState({ providers: results.data }))\n    fetchRoutes().then(results => this.setState({ routes: results.data }))\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = getParsedSearchString(prevProps)\n    const params = getParsedSearchString(this.props)\n\n    if (params.r !== prevParams.r) {\n      if(!params.r) {\n        return this.setState(state => ({\n          ...initialState,\n          providers: state.providers,\n          routes: state.routes,\n        }))\n      }\n\n      return fetchDirections(params.r).then(result => {\n        const directions = result.data\n        this.setState({ currentRoute: params.r, directions })\n      }) \n    }\n\n    if (params.d !== prevParams.d) {\n      if(!params.d) {\n        return this.setState({ currentDirection: '', stops: [] })\n      }\n\n      return fetchStops(params.r, params.d).then(result => {\n        const stops = result.data\n        this.setState({ currentDirection: params.d, stops })\n      })\n    }\n  }\n\n  onSelectRoute = (currentRoute = '') => {\n    const { history } = this.props\n    if (currentRoute !== '') history.push(`?r=${currentRoute}`)\n  }\n\n  onSelectDirection = (currentDirection = '') => {\n    const { history } = this.props\n    const { currentRoute } = this.state\n    if (currentDirection !== '') history.push(`?r=${currentRoute}&d=${currentDirection}`)\n  }\n\n  onStopClicked = ({ Value = '', Text = '' }) => {\n    const { currentRoute, currentDirection } = this.state\n    fetchDepartures(currentRoute, currentDirection, Value).then(result => {\n      this.setState({ departures: result.data, currentStopText: Text, showModal: true })\n    })\n  }\n\n  closeModal = () => this.setState({ showModal: false })\n\n  onSelectProvider = (currentProvider = '') => this.setState({ currentProvider })\n\n  render() {\n    const { history = {} } = this.props\n    const { \n      providers,\n      routes, \n      directions, \n      stops, \n      departures,\n      currentProvider, \n      currentRoute, \n      currentDirection, \n      currentStopText, \n      showModal, \n    } = this.state\n    const filteredRoutes =  currentProvider === '' ? routes : routes.filter(x =>  x.ProviderID === currentProvider)\n    const currentRouteData = routes.find(x => x.Route === currentRoute)\n    const currentDirectionData = directions.find(x => x.Value === currentDirection)\n    return (\n      <Grid container>\n        <Grid item xs={false} md={1} />\n        <Grid item xs={12} md={5} md-offset={1}>\n          {providers.length > 0 &&\n            <ProviderList\n              currentProvider={currentProvider}\n              providers={providers}\n              onSelectProvider={this.onSelectProvider}\n            />\n          }\n          {routes.length > 0 &&\n            <RoutesList \n              history={history}\n              routes={filteredRoutes}\n              currentRoute={currentRoute}\n              onSelectRoute={this.onSelectRoute}\n            /> \n          }\n          {directions.length > 0 &&\n            <DirectionButtons \n              directions={directions}\n              currentDirection={currentDirection}\n              onSelectDirection={this.onSelectDirection}\n            />\n          }\n        </Grid> \n        <Grid item xs={12} md={5}>\n          {stops.length > 0 &&\n            <StopsList stops={stops} onStopClicked={this.onStopClicked} />\n          }\n        </Grid>\n        <InfoDialog \n          open={showModal} \n          currentStopText={currentStopText} \n          departures={departures}\n          handleClose={this.closeModal} \n          currentRouteData={currentRouteData}\n          currentDirectionData={currentDirectionData}\n        />\n      </Grid>\n    )\n  }\n}\n\nexport default RootContainer","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport RootContainer from './containers/rootContainer'\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" component={RootContainer} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}