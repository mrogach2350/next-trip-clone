{"version":3,"sources":["utils/styleConstants.js","components/routesList.js","components/directionButtons.js","components/stopsList.js","components/infoDialog.js","utils/apiCalls.js","containers/rootContainer.js","App.js","serviceWorker.js","index.js"],"names":["header","backgroundColor","color","margin","padding","styles","Object","objectSpread","display","justifyContent","alignItems","root","textAlign","withStyles","_ref","_ref$classes","classes","_ref$routes","routes","_ref$currentRoute","currentRoute","_ref$onSelectRoute","onSelectRoute","_ref$history","history","currentRouteData","find","x","Route","react_default","a","createElement","index_es","className","style","onClick","push","variant","maxHeight","overflow","map","route","idx","button","selected","key","Description","flexDirection","paper","_ref$directions","directions","_ref$currentDirection","currentDirection","_ref$onSelectDirectio","onSelectDirection","direction","Value","Text","_ref$stops","stops","_ref$onStopClicked","onStopClicked","stop","value","listing","marginBottom","content","_ref$currentStopText","currentStopText","_ref$open","open","_ref$departures","departures","handleClose","_ref$currentRouteData","currentDirectionData","fullWidth","onClose","length","departure","DepartureText","fetchDepartures","routeNumber","arguments","undefined","stopId","axios","get","concat","RootContainer","_React$PureComponent","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","_ref$Value","_ref$Text","_this$state","then","result","setState","data","showModal","closeModal","defaultProvider","providers","currentProvider","inherits","createClass","_this2","results","filteredRoutes","filter","ProviderID","prevProps","prevState","_this3","prevParams","queryString","parse","location","search","params","r","fetchDirections","d","fetchStops","_this$props$history","_this$state2","container","item","xs","md","md-offset","routesList","directionButtons","stopsList","infoDialog","React","PureComponent","App","react_router_dom","react_router","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b7416e00.chunk.js","sourcesContent":["export const flexHeader = {\n  backgroundColor: '#3f51b5', \n  color: 'white', \n  margin: 0, \n  padding: '20px',\n  display: 'flex',\n  justifyContent: 'space-around',\n  alignItems: 'center',\n}\n\nexport const header = {\n  backgroundColor: '#3f51b5', \n  color: 'white', \n  margin: 0, \n  padding: '20px',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, List, ListItem, Button } from '@material-ui/core'\nimport { flexHeader } from '../utils/styleConstants'\n\nconst styles = {\n  header: {\n    ...flexHeader,\n  },\n  root: { \n    margin: '20px', \n    textAlign: 'center', \n  }\n}\n\nexport const RoutesList = ({ \n  classes = {},\n  routes = [], \n  currentRoute = '', \n  onSelectRoute = () => {},\n  history = {},\n}) => {\n  const currentRouteData = routes.find(x => x.Route === currentRoute)\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <h1 style={{ margin: 0 }}>Routes</h1>\n        <Button onClick={() => history.push('/')} variant=\"contained\" >Reset</Button>\n      </div>\n      {/* <h1 onClick={() => history.push('/')} className={classes.header}>Routes</h1> */}\n      {currentRoute === '' ?\n        <List style={{ maxHeight: '500px', overflow: 'scroll' }}>\n          {routes.map((route, idx) => \n            <ListItem \n              button\n              onClick={() => onSelectRoute(route.Route)}\n              selected={currentRoute === route.Route}\n              key={idx}\n            >\n              {route.Description}\n            </ListItem>\n          )}\n        </List>:\n        <h4 style={{ padding: '15px', margin: 0 }}>\n          {currentRouteData.Description}\n        </h4>\n      }\n    </Paper> \n  )\n} \n\nRoutesList.propTypes = {\n  classes: PropTypes.object,\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      Route: PropTypes.string,\n      Description: PropTypes.string,\n    })\n  ),\n  currentRoute: PropTypes.string,\n  onSelectRoute: PropTypes.func,\n  history: PropTypes.object,\n}\n\nexport default withStyles(styles)(RoutesList)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, Button } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  root: { \n    margin: 0,\n    padding: '16px', \n    display: 'flex', \n    flexDirection: 'column', \n    alignItems: 'center',\n    justifyContent: 'center' \n  },\n  button: {\n    margin: '10px',\n  },\n  paper: { \n    margin: '20px', \n    textAlign: 'center', \n  }\n}\n\nexport const DirectionButtons = ({ \n    classes = {},\n    directions = [], \n    currentDirection = '', \n    onSelectDirection = () => {},\n    history = () => {},\n    currentRoute = '', \n  }) => \n    <Paper className={classes.paper}>\n      <div className={classes.header}>\n        <h1 style={{ margin: 0 }}>Direction</h1>\n      </div>\n      <div className={classes.root}>\n        {directions.map((direction, idx) => \n          <Button \n            key={idx}\n            className={classes.button}\n            variant=\"contained\" \n            color={currentDirection === direction.Value ? \"primary\" : \"default\"}\n            onClick={() => onSelectDirection(direction.Value)}\n          >\n            {direction.Text}\n          </Button>\n        )}\n      </div>\n    </Paper>\n\nDirectionButtons.propTypes = {\n  classes: PropTypes.object,\n  directions: PropTypes.arrayOf(\n    PropTypes.shape({\n      Value: PropTypes.string,\n      Text: PropTypes.string,\n    })\n  ),\n  currentDirection: PropTypes.string,\n  onSelectDirection: PropTypes.func,\n}\n\nexport default withStyles(styles)(DirectionButtons)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, List, ListItem } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n}\n\nexport const StopsList = ({ stops = [], classes = {}, onStopClicked = () => {} }) => {\n  return (\n    <Paper style={{ margin: '20px', textAlign: 'center' }}>\n      <h1 className={classes.header}>Stops</h1>\n      <List style={{ maxHeight: '500px', overflow: 'scroll' }}>\n        {stops.map((stop, idx) => \n          <ListItem \n            button\n            onClick={() => onStopClicked(stop)}\n            value={stop.Value} \n            key={idx}\n          >\n            {stop.Text}\n          </ListItem>\n        )}\n      </List>\n    </Paper>\n  )\n}\n\nexport default withStyles(styles)(StopsList)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Dialog, DialogContent } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  listing: {\n    marginBottom: '10px'\n  },\n  content: {\n    textAlign: 'center',\n    padding: '10px',\n  }\n}\n\nexport const InfoDialog = ({ \n  currentStopText = '', \n  open = false, \n  departures = [],\n  handleClose, \n  classes = {},\n  currentRouteData = {},\n  currentDirectionData = {}, \n}) => {\n  return(\n    <Dialog open={open} fullWidth onClose={handleClose} >\n      <div className={classes.header}>\n        <strong>Route:</strong> {currentRouteData.Description}<br/>\n        <strong>Stop:</strong> {currentStopText}<br/>\n        <strong>Direction:</strong> {currentDirectionData.Text} \n      </div>\n      <DialogContent className={classes.content}>\n        {departures.length === 0 ? \n          <h4>No Departures left today</h4>:\n          departures.map(departure => \n            <div className={classes.listing}>\n              <span>{departure.Description}</span><br/>\n              <span>Departs At: {departure.DepartureText}</span>\n            </div>\n          )\n        }\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default withStyles(styles)(InfoDialog)","import axios from 'axios'\n\nexport const fetchProviders = () => axios.get('http://svc.metrotransit.org/NexTrip/Providers?format=json')\n\nexport const fetchRoutes = () => axios.get('http://svc.metrotransit.org/NexTrip/Routes?format=json')\n\nexport const fetchDirections = (routeNumber = 0) => \n  axios.get(`http://svc.metrotransit.org/NexTrip/Directions/${routeNumber}?format=json`)\n\nexport const fetchStops = (routeNumber = 0, direction = 0) => \n  axios.get(`http://svc.metrotransit.org/NexTrip/Stops/${routeNumber}/${direction}?format=json`)\n\nexport const fetchDepartures = (routeNumber = 0, direction = 0, stopId = '') => \n  axios.get(`http://svc.metrotransit.org/NexTrip/${routeNumber}/${direction}/${stopId}`)\n\n","import React from 'react'\nimport queryString from 'query-string'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Grid } from '@material-ui/core'\nimport RoutesList from '../components/routesList'\nimport DirectionButtons from '../components/directionButtons'\nimport StopsList from '../components/stopsList'\nimport InfoDialog from '../components/infoDialog'\nimport { fetchProviders, fetchRoutes, fetchDirections, fetchStops, fetchDepartures } from '../utils/apiCalls'\n\nexport class RootContainer extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      defaultProvider: '8',\n      providers: [],\n      routes: [],\n      directions: [],\n      stops: [],\n      currentProvider: '8',\n      currentRoute: '',\n      currentDirection: '',\n      currentStopText: '',\n    }\n  }\n\n  componentDidMount() {\n    const { currentProvider } = this.state\n    fetchProviders().then(results => this.setState({ providers: results.data }))\n    fetchRoutes().then(results => {\n      const filteredRoutes = results.data.filter(x => x.ProviderID === currentProvider)\n      this.setState({ routes: filteredRoutes })\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevParams = queryString.parse(prevProps.location.search)\n    const params = queryString.parse(this.props.location.search)\n\n    if (params.r !== prevParams.r) {\n      if(!params.r) {\n        return this.setState({ \n          currentRoute: '', \n          currentDirection: '',\n          directions: [], \n          stops: [],\n          departures: [],\n          showModal: false,\n        })\n      }\n\n      return fetchDirections(params.r).then(result => {\n        const directions = result.data\n        this.setState({ currentRoute: params.r, directions })\n      }) \n    }\n\n    if (params.d !== prevParams.d) {\n      if(!params.d) {\n        return this.setState({ currentDirection: '', stops: [] })\n      }\n\n      return fetchStops(params.r, params.d).then(result => {\n        const stops = result.data\n        this.setState({ currentDirection: params.d, stops })\n      })\n    }\n  }\n\n  onSelectRoute = (currentRoute) => {\n    const { history } = this.props\n    history.push(`?r=${currentRoute}`)\n  }\n\n  onSelectDirection = (currentDirection) => {\n    const { history } = this.props\n    const { currentRoute } = this.state\n    history.push(`?r=${currentRoute}&d=${currentDirection}`)\n  }\n\n  onStopClicked = ({ Value = '', Text = '' }) => {\n    const { currentRoute, currentDirection } = this.state\n    fetchDepartures(currentRoute, currentDirection, Value).then(result => {\n      this.setState({ departures: result.data, currentStopText: Text, showModal: true })\n    })\n  }\n\n  closeModal = () => this.setState({ showModal: false })\n\n  render() {\n    const { \n      history = {}, \n    } = this.props\n    const { \n      routes, \n      currentRoute, \n      directions, \n      currentDirection, \n      stops, \n      currentStopText, \n      showModal, \n      departures \n    } = this.state\n    const currentRouteData = routes.find(x => x.Route === currentRoute)\n    const currentDirectionData = directions.find(x => x.Value === currentDirection)\n    return (\n      <Grid container>\n        <Grid item xs={false} md={1} />\n        <Grid item xs={12} md={5} md-offset={1}>\n          {routes.length > 0 &&\n            <RoutesList \n              history={history}\n              routes={routes}\n              currentRoute={currentRoute}\n              onSelectRoute={this.onSelectRoute}\n            /> \n          }\n          {directions.length > 0 &&\n            <DirectionButtons \n              directions={directions}\n              currentDirection={currentDirection}\n              onSelectDirection={this.onSelectDirection}\n            />\n          }\n        </Grid> \n        <Grid item xs={12} md={5}>\n          {stops.length > 0 &&\n            <StopsList stops={stops} onStopClicked={this.onStopClicked} />\n          }\n        </Grid>\n        <InfoDialog \n          open={showModal} \n          currentStopText={currentStopText} \n          departures={departures}\n          handleClose={this.closeModal} \n          currentRouteData={currentRouteData}\n          currentDirectionData={currentDirectionData}\n        />\n      </Grid>\n    )\n  }\n}\n\nexport default RootContainer","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport RootContainer from './containers/rootContainer'\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" component={RootContainer} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}