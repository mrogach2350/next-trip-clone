{"version":3,"sources":["utils/styleConstants.js","components/routesList.js","components/directionButtons.js","components/stopsList.js","components/infoDialog.js","components/providerList.js","utils/selectors.js","utils/apiCalls.js","containers/rootContainer.js","App.js","serviceWorker.js","index.js"],"names":["header","backgroundColor","color","margin","padding","styles","Object","objectSpread","display","justifyContent","alignItems","root","textAlign","list","maxHeight","overflow","h1","withStyles","_ref","_ref$classes","classes","_ref$routes","routes","_ref$currentRouteData","currentRouteData","_ref$onSelectRoute","onSelectRoute","_ref$history","history","react_default","a","createElement","index_es","className","onClick","push","variant","isEmpty","map","route","idx","button","Route","selected","key","Description","style","flexDirection","paper","_ref$directions","directions","_ref$currentDirection","currentDirection","_ref$onSelectDirectio","onSelectDirection","currentRoute","direction","Value","Text","_ref$stops","stops","_ref$onStopClicked","onStopClicked","stop","value","listing","marginBottom","content","_ref$currentStopText","currentStopText","_ref$open","open","_ref$departures","departures","handleClose","currentDirectionData","fullWidth","onClose","length","departure","Actual","DepartureText","ProviderList","_React$PureComponent","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","anchorEl","handleClick","event","setState","currentTarget","handleSelectAndClose","currentProvider","_this$props$onSelectP","props","onSelectProvider","inherits","createClass","_this2","_this$props","_this$props$providers","providers","_this$props$currentPr","_this$props$classes","currentProviderData","find","x","aria-owns","undefined","aria-haspopup","id","Boolean","provider","React","PureComponent","getParsedSearchString","queryString","parse","_","location","search","getSearchString","fetchDirections","routeNumber","axios","get","fetchStops","fetchDepartures","stopId","initialState","showModal","RootContainer","_ref2","asyncToGenerator","regenerator_default","mark","_callee","_ref$Value","_ref$Text","_this$state","departuresResult","wrap","_context","prev","next","sent","data","abrupt","_x","closeModal","_componentDidMount","_callee2","params","providersResults","routesResult","directionsResult","stopsResult","_context2","r","d","_componentDidUpdate","_callee3","prevProps","prevState","prevParams","_context3","_x2","_x3","_this$props$history","_this$state2","_this$state2$routes","filteredRoutes","filter","ProviderID","container","item","xs","md","md-offset","providerList","routesList","directionButtons","stopsList","infoDialog","App","react_router_dom","react_router","path","component","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4319897b.chunk.js","sourcesContent":["export const flexHeader = {\n  backgroundColor: '#3f51b5', \n  color: 'white', \n  margin: 0, \n  padding: '20px',\n  display: 'flex',\n  justifyContent: 'space-around',\n  alignItems: 'center',\n}\n\nexport const header = {\n  backgroundColor: '#3f51b5', \n  color: 'white', \n  margin: 0, \n  padding: '20px',\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { isEmpty } from 'lodash'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, List, ListItem, Button } from '@material-ui/core'\nimport { flexHeader } from '../utils/styleConstants'\n\nconst styles = {\n  header: {\n    ...flexHeader,\n  },\n  root: { \n    margin: '20px', \n    textAlign: 'center', \n  },\n  list: { \n    maxHeight: '70vh', \n    overflow: 'scroll' \n  },\n  h1: {\n    margin: 0,\n  }\n}\n\nexport const RoutesList = ({ \n  classes = {},\n  routes = [], \n  currentRouteData = {}, \n  onSelectRoute = () => {},\n  history = {},\n}) => {\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.header}>\n        <h1 className={classes.h1}>Routes</h1>\n        <Button onClick={() => history.push('/')} variant=\"contained\" >Reset</Button>\n      </div>\n      {isEmpty(currentRouteData) ?\n        <List className={classes.list}>\n          {routes.map((route, idx) => \n            <ListItem \n              button\n              onClick={() => onSelectRoute(route.Route)}\n              selected={currentRouteData.Route === route.Route}\n              key={idx}\n            >\n              {route.Description}\n            </ListItem>\n          )}\n        </List>:\n        <h4 style={{ padding: '15px', margin: 0 }}>\n          {currentRouteData.Description}\n        </h4>\n      }\n    </Paper> \n  )\n} \n\nRoutesList.propTypes = {\n  classes: PropTypes.object,\n  routes: PropTypes.arrayOf(\n    PropTypes.shape({\n      Route: PropTypes.string,\n      Description: PropTypes.string,\n    })\n  ),\n  currentRoute: PropTypes.string,\n  onSelectRoute: PropTypes.func,\n  history: PropTypes.object,\n}\n\nexport default withStyles(styles)(RoutesList)","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, Button } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  root: { \n    margin: 0,\n    padding: '16px', \n    display: 'flex', \n    flexDirection: 'column', \n    alignItems: 'center',\n    justifyContent: 'center' \n  },\n  button: {\n    margin: '10px',\n  },\n  paper: { \n    margin: '20px', \n    textAlign: 'center', \n  },\n  h1: {\n    margin: 0,\n  }\n}\n\nexport const DirectionButtons = ({ \n    classes = {},\n    directions = [], \n    currentDirection = '', \n    onSelectDirection = () => {},\n    history = () => {},\n    currentRoute = '', \n  }) => \n    <Paper className={classes.paper}>\n      <div className={classes.header}>\n        <h1 className={classes.h1}>Direction</h1>\n      </div>\n      <div className={classes.root}>\n        {directions.map((direction, idx) => \n          <Button \n            key={idx}\n            className={classes.button}\n            variant=\"contained\" \n            color={currentDirection === direction.Value ? \"primary\" : \"default\"}\n            onClick={() => onSelectDirection(direction.Value)}\n          >\n            {direction.Text}\n          </Button>\n        )}\n      </div>\n    </Paper>\n\nDirectionButtons.propTypes = {\n  classes: PropTypes.object,\n  directions: PropTypes.arrayOf(\n    PropTypes.shape({\n      Value: PropTypes.string,\n      Text: PropTypes.string,\n    })\n  ),\n  currentDirection: PropTypes.string,\n  onSelectDirection: PropTypes.func,\n}\n\nexport default withStyles(styles)(DirectionButtons)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, List, ListItem } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  root: { \n    margin: '20px', \n    textAlign: 'center', \n  },\n  list: { \n    maxHeight: '60vh', \n    overflow: 'scroll', \n  }\n}\n\nexport const StopsList = ({ \n  stops = [], \n  classes = {}, \n  onStopClicked = () => {} \n}) => \n  <Paper className={classes.root}>\n    <h1 className={classes.header}>Stops</h1>\n    <List className={classes.list}>\n      {stops.map((stop, idx) => \n        <ListItem \n          button\n          onClick={() => onStopClicked(stop)}\n          value={stop.Value} \n          key={idx}\n        >\n          {stop.Text}\n        </ListItem>\n      )}\n    </List>\n  </Paper>\n\nexport default withStyles(styles)(StopsList)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Dialog, DialogContent } from '@material-ui/core'\nimport { header } from '../utils/styleConstants'\n\nconst styles = {\n  header,\n  listing: {\n    marginBottom: '10px'\n  },\n  content: {\n    textAlign: 'center',\n    padding: '10px',\n  }\n}\n\nexport const InfoDialog = ({ \n  currentStopText = '', \n  open = false, \n  departures = [],\n  handleClose, \n  classes = {},\n  currentRouteData = {},\n  currentDirectionData = {}, \n}) => \n  <Dialog open={open} fullWidth onClose={handleClose} >\n    <div className={classes.header}>\n      <strong>Route:</strong> {currentRouteData.Description}<br/>\n      <strong>Stop:</strong> {currentStopText}<br/>\n      <strong>Direction:</strong> {currentDirectionData.Text} \n    </div>\n    <DialogContent className={classes.content}>\n      {departures.length === 0 ? \n        <h4>No Departures left today</h4>:\n        departures.map((departure, idx) => \n          <div key={idx} className={classes.listing}>\n            <span>{departure.Description}</span><br/>\n            {departure.Actual ?\n              <span>LIVE: Departs in {departure.DepartureText}</span> :\n              <span>Departs At: {departure.DepartureText}</span>\n            }\n          </div>\n        )\n      }\n    </DialogContent>\n  </Dialog>\n\nexport default withStyles(styles)(InfoDialog)","import React from 'react'\nimport { withStyles } from '@material-ui/core/styles'\nimport { Paper, Button, Menu, MenuItem } from '@material-ui/core'\n\nconst styles = {\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: '20px',\n  },\n  button: {\n    margin: '20px',\n  }\n}\n\nexport class ProviderList extends React.PureComponent {\n  state = {\n    anchorEl: null,\n  }\n\n  handleClick = event => {\n    this.setState({ anchorEl: event.currentTarget })\n  }\n\n  handleClose = () => {\n    this.setState({ anchorEl: null })\n  }\n\n  handleSelectAndClose = (currentProvider) => {\n    const { onSelectProvider = () => {} } = this.props\n    onSelectProvider(currentProvider)\n    this.setState({ anchorEl: null })\n  }\n\n  render() {\n    const { providers = [], currentProvider = '', classes = {} } = this.props\n    const { anchorEl } = this.state\n    const currentProviderData = providers.find(x =>  x.Value ===  currentProvider) || {}\n    return (\n      <Paper className={classes.root}>\n        <h4>Filter By Provider: </h4>\n        <Button\n          aria-owns={anchorEl ? 'simple-menu' : undefined}\n          aria-haspopup=\"true\"\n          onClick={this.handleClick}\n          className={classes.button}\n        >\n          {currentProviderData.Text || \"All Providers\" }\n        </Button>\n        <Menu\n          id=\"simple-menu\"\n          anchorEl={anchorEl}\n          open={Boolean(anchorEl)}\n          onClose={this.handleClose}\n        >\n          <MenuItem \n              onClick={() => this.handleSelectAndClose('')}\n            >\n              All Providers\n            </MenuItem>\n          {providers.map((provider, idx) => \n            <MenuItem \n              key={idx}\n              onClick={() => this.handleSelectAndClose(provider.Value)}\n            >\n              {provider.Text}\n            </MenuItem>\n          )}\n        </Menu>\n      </Paper>\n    )\n  }\n}\n\nexport default withStyles(styles)(ProviderList)","import idx from 'idx'\nimport queryString from 'query-string'\n\nexport const getSearchString = (props = {}) => idx(props, _ => _.location.search)\n\nexport const getParsedSearchString = (props = {}) =>\n  queryString.parse(getSearchString(props))","import axios from 'axios'\n\nexport const fetchProviders = () => axios.get('http://svc.metrotransit.org/NexTrip/Providers?format=json')\n\nexport const fetchRoutes = () => axios.get('http://svc.metrotransit.org/NexTrip/Routes?format=json')\n\nexport const fetchDirections = (routeNumber = 0) => \n  axios.get(`http://svc.metrotransit.org/NexTrip/Directions/${routeNumber}?format=json`)\n\nexport const fetchStops = (routeNumber = 0, direction = 0) => \n  axios.get(`http://svc.metrotransit.org/NexTrip/Stops/${routeNumber}/${direction}?format=json`)\n\nexport const fetchDepartures = (routeNumber = 0, direction = 0, stopId = '') => \n  axios.get(`http://svc.metrotransit.org/NexTrip/${routeNumber}/${direction}/${stopId}`)\n\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid } from '@material-ui/core'\nimport RoutesList from '../components/routesList'\nimport DirectionButtons from '../components/directionButtons'\nimport StopsList from '../components/stopsList'\nimport InfoDialog from '../components/infoDialog'\nimport ProviderList from '../components/providerList'\nimport { getParsedSearchString } from '../utils/selectors'\nimport { fetchProviders, fetchRoutes, fetchDirections, fetchStops, fetchDepartures } from '../utils/apiCalls'\n\nconst initialState = {\n  providers: [],\n  routes: [],\n  directions: [],\n  stops: [],\n  departures: [],\n  currentProvider: '',\n  currentRoute: '',\n  currentDirection: '',\n  currentStopText: '',\n  showModal: false,\n}\n\nexport class RootContainer extends React.PureComponent {\n  constructor(props) {\n    super(props)\n\n    this.state = initialState\n  }\n\n  async componentDidMount() {\n    const params = getParsedSearchString(this.props)\n    const providersResults = await fetchProviders()\n    const providers = await providersResults.data\n    // const providers = await fetchProviders().data\n    const routesResult = await fetchRoutes()\n    const routes = await routesResult.data\n\n    if (params.r !== '') {\n      const directionsResult = await fetchDirections(params.r)\n      const directions = await directionsResult.data\n\n      // Check to see if direction is present on load\n      if (params.d !== '') {\n        const stopsResult = await fetchStops(params.r, params.d)\n        const stops = await stopsResult.data\n        return this.setState({ \n          currentRoute: params.r, \n          currentDirection: params.d, \n          providers,\n          directions, \n          routes,\n          stops \n        })\n      }\n      return this.setState({ currentRoute: params.r, directions, routes, providers })\n    }\n    return this.setState({ routes, providers })\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const prevParams = getParsedSearchString(prevProps)\n    const params = getParsedSearchString(this.props)\n\n    // Check if route is selected\n    // if not, reset state\n    if (params.r !== prevParams.r) {\n      if(!params.r) {\n        return this.setState(state => ({\n          ...initialState,\n          providers: state.providers,\n          routes: state.routes,\n        }))\n      }\n\n      // if route is selected, fetch directions\n      const directionsResult = await fetchDirections(params.r)\n      const directions = await directionsResult.data\n      return this.setState({ currentRoute: params.r, directions })\n    }\n\n    // if direction changed\n    if (params.d !== prevParams.d) {\n      // if no direction clear selection\n      if(!params.d) return this.setState({ currentDirection: '', stops: [] })\n\n      // if direction, fetch stops\n      const stopsResult = await fetchStops(params.r, params.d)\n      const stops = await stopsResult.data\n      return this.setState({ currentDirection: params.d, stops })\n\n    }\n  }\n\n  onSelectRoute = (currentRoute = '') => {\n    const { history } = this.props\n    if (currentRoute !== '') history.push(`?r=${currentRoute}`)\n  }\n\n  onSelectDirection = (currentDirection = '') => {\n    const { history } = this.props\n    const { currentRoute } = this.state\n    if (currentDirection !== '') history.push(`?r=${currentRoute}&d=${currentDirection}`)\n  }\n\n  onStopClicked = async ({ Value = '', Text = '' }) => {\n    const { currentRoute, currentDirection } = this.state\n    const departuresResult = await fetchDepartures(currentRoute, currentDirection, Value)\n    const departures = departuresResult.data\n\n    return this.setState({ departures, currentStopText: Text, showModal: true })\n  }\n\n  closeModal = () => this.setState({ showModal: false })\n\n  onSelectProvider = (currentProvider = '') => this.setState({ currentProvider })\n\n  render() {\n    const { history = {} } = this.props\n    const { \n      providers,\n      routes = [], \n      directions, \n      stops, \n      departures,\n      currentProvider, \n      currentRoute, \n      currentDirection, \n      currentStopText, \n      showModal, \n    } = this.state\n    const filteredRoutes =  currentProvider === '' ? routes : routes.filter(x =>  x.ProviderID === currentProvider)\n    const currentRouteData = routes.find(x => x.Route === currentRoute)\n    const currentDirectionData = directions.find(x => x.Value === currentDirection)\n    return (\n      <Grid container>\n        <Grid item xs={false} md={1} />\n        <Grid item xs={12} md={5} md-offset={1}>\n          {providers.length > 0 &&\n            <ProviderList\n              currentProvider={currentProvider}\n              providers={providers}\n              onSelectProvider={this.onSelectProvider}\n            />\n          }\n          {routes.length > 0 &&\n            <RoutesList \n              history={history}\n              routes={filteredRoutes}\n              currentRouteData={currentRouteData}\n              onSelectRoute={this.onSelectRoute}\n            /> \n          }\n          {directions.length > 0 &&\n            <DirectionButtons \n              directions={directions}\n              currentDirection={currentDirection}\n              onSelectDirection={this.onSelectDirection}\n            />\n          }\n        </Grid> \n        <Grid item xs={12} md={5}>\n          {stops.length > 0 &&\n            <StopsList stops={stops} onStopClicked={this.onStopClicked} />\n          }\n        </Grid>\n        <InfoDialog \n          open={showModal} \n          currentStopText={currentStopText} \n          departures={departures}\n          handleClose={this.closeModal} \n          currentRouteData={currentRouteData}\n          currentDirectionData={currentDirectionData}\n        />\n      </Grid>\n    )\n  }\n}\n\nRootContainer.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n    location: PropTypes.shape({\n      search: PropTypes.string,\n    })\n  })\n}\n\nexport default RootContainer","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport RootContainer from './containers/rootContainer'\n\nfunction App() {\n  return (\n    <Router>\n      <Route path=\"/\" component={RootContainer} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}